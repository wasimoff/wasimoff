// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/v1/messages.proto

package wasimoffv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Subprotocol is used to identify the concrete encoding on the wire.
type Subprotocol int32

const (
	Subprotocol_UNKNOWN                       Subprotocol = 0
	Subprotocol_wasimoff_provider_v1_protobuf Subprotocol = 1 // binary messages with Protobuf encoding
	Subprotocol_wasimoff_provider_v1_json     Subprotocol = 2 // text messages with JSON encoding
)

// Enum value maps for Subprotocol.
var (
	Subprotocol_name = map[int32]string{
		0: "UNKNOWN",
		1: "wasimoff_provider_v1_protobuf",
		2: "wasimoff_provider_v1_json",
	}
	Subprotocol_value = map[string]int32{
		"UNKNOWN":                       0,
		"wasimoff_provider_v1_protobuf": 1,
		"wasimoff_provider_v1_json":     2,
	}
)

func (x Subprotocol) Enum() *Subprotocol {
	p := new(Subprotocol)
	*p = x
	return p
}

func (x Subprotocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Subprotocol) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_messages_proto_enumTypes[0].Descriptor()
}

func (Subprotocol) Type() protoreflect.EnumType {
	return &file_proto_v1_messages_proto_enumTypes[0]
}

func (x Subprotocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Subprotocol.Descriptor instead.
func (Subprotocol) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{0}
}

type Envelope_MessageType int32

const (
	Envelope_UNKNOWN  Envelope_MessageType = 0
	Envelope_Request  Envelope_MessageType = 1
	Envelope_Response Envelope_MessageType = 2
	Envelope_Event    Envelope_MessageType = 3
)

// Enum value maps for Envelope_MessageType.
var (
	Envelope_MessageType_name = map[int32]string{
		0: "UNKNOWN",
		1: "Request",
		2: "Response",
		3: "Event",
	}
	Envelope_MessageType_value = map[string]int32{
		"UNKNOWN":  0,
		"Request":  1,
		"Response": 2,
		"Event":    3,
	}
)

func (x Envelope_MessageType) Enum() *Envelope_MessageType {
	p := new(Envelope_MessageType)
	*p = x
	return p
}

func (x Envelope_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Envelope_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_messages_proto_enumTypes[1].Descriptor()
}

func (Envelope_MessageType) Type() protoreflect.EnumType {
	return &file_proto_v1_messages_proto_enumTypes[1]
}

func (x Envelope_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Envelope_MessageType.Descriptor instead.
func (Envelope_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{0, 0}
}

type Task_TraceEvent_EventType int32

const (
	Task_TraceEvent_UNKNOWN                      Task_TraceEvent_EventType = 0
	Task_TraceEvent_ClientError                  Task_TraceEvent_EventType = 10
	Task_TraceEvent_ClientTransmitRequest        Task_TraceEvent_EventType = 11 // transmit request to broker
	Task_TraceEvent_ClientReceivedResponse       Task_TraceEvent_EventType = 12 // received response from broker
	Task_TraceEvent_BrokerError                  Task_TraceEvent_EventType = 20
	Task_TraceEvent_BrokerReceivedClientRequest  Task_TraceEvent_EventType = 21 // received request from client
	Task_TraceEvent_BrokerQueueTask              Task_TraceEvent_EventType = 22 // queued task the task for scheduling
	Task_TraceEvent_BrokerScheduleTask           Task_TraceEvent_EventType = 23 // attempt to schedule on a provider
	Task_TraceEvent_BrokerTransmitProviderTask   Task_TraceEvent_EventType = 24 // transmit the task to selected provider
	Task_TraceEvent_BrokerReceivedProviderResult Task_TraceEvent_EventType = 25 // received a result from provider
	Task_TraceEvent_BrokerTransmitClientResponse Task_TraceEvent_EventType = 26 // transmit the response to client
	Task_TraceEvent_ProviderError                Task_TraceEvent_EventType = 30
	Task_TraceEvent_ProviderTaskReceived         Task_TraceEvent_EventType = 31 // received task from broker
	Task_TraceEvent_ProviderGetWorker            Task_TraceEvent_EventType = 32 // get an idle worker
	Task_TraceEvent_ProviderPostToWorker         Task_TraceEvent_EventType = 33 // post the task details to worker
	Task_TraceEvent_ProviderWorkerPrepare        Task_TraceEvent_EventType = 34 // worker prepares execution environment
	Task_TraceEvent_ProviderWorkerExecute        Task_TraceEvent_EventType = 35 // instance spawned, execute the task
	Task_TraceEvent_ProviderWorkerDone           Task_TraceEvent_EventType = 36 // execution is done, post result to provider
	Task_TraceEvent_ProviderTransmitResult       Task_TraceEvent_EventType = 37 // transmit the result to broker
)

// Enum value maps for Task_TraceEvent_EventType.
var (
	Task_TraceEvent_EventType_name = map[int32]string{
		0:  "UNKNOWN",
		10: "ClientError",
		11: "ClientTransmitRequest",
		12: "ClientReceivedResponse",
		20: "BrokerError",
		21: "BrokerReceivedClientRequest",
		22: "BrokerQueueTask",
		23: "BrokerScheduleTask",
		24: "BrokerTransmitProviderTask",
		25: "BrokerReceivedProviderResult",
		26: "BrokerTransmitClientResponse",
		30: "ProviderError",
		31: "ProviderTaskReceived",
		32: "ProviderGetWorker",
		33: "ProviderPostToWorker",
		34: "ProviderWorkerPrepare",
		35: "ProviderWorkerExecute",
		36: "ProviderWorkerDone",
		37: "ProviderTransmitResult",
	}
	Task_TraceEvent_EventType_value = map[string]int32{
		"UNKNOWN":                      0,
		"ClientError":                  10,
		"ClientTransmitRequest":        11,
		"ClientReceivedResponse":       12,
		"BrokerError":                  20,
		"BrokerReceivedClientRequest":  21,
		"BrokerQueueTask":              22,
		"BrokerScheduleTask":           23,
		"BrokerTransmitProviderTask":   24,
		"BrokerReceivedProviderResult": 25,
		"BrokerTransmitClientResponse": 26,
		"ProviderError":                30,
		"ProviderTaskReceived":         31,
		"ProviderGetWorker":            32,
		"ProviderPostToWorker":         33,
		"ProviderWorkerPrepare":        34,
		"ProviderWorkerExecute":        35,
		"ProviderWorkerDone":           36,
		"ProviderTransmitResult":       37,
	}
)

func (x Task_TraceEvent_EventType) Enum() *Task_TraceEvent_EventType {
	p := new(Task_TraceEvent_EventType)
	*p = x
	return p
}

func (x Task_TraceEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_TraceEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_messages_proto_enumTypes[2].Descriptor()
}

func (Task_TraceEvent_EventType) Type() protoreflect.EnumType {
	return &file_proto_v1_messages_proto_enumTypes[2]
}

func (x Task_TraceEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_TraceEvent_EventType.Descriptor instead.
func (Task_TraceEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 3, 0}
}

// Envelope is a generic message wrapper with a sequence counter and message type.
// The payload can contain a { Request, Response, Event }. When an Error is present
// on a Response, it indicates that the Request failed badly internally.
type Envelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The sequence number is incremented for each message but Request and Event
	// count independently. Responses must always reuse the Request's sequence
	// number so they can be routed to the caller correctly.
	Sequence *uint64 `protobuf:"varint,1,opt,name=sequence" json:"sequence,omitempty"`
	// The message type indicates the payload contents: { Request, Response, Event }.
	Type *Envelope_MessageType `protobuf:"varint,2,opt,name=type,enum=wasimoff.v1.Envelope_MessageType" json:"type,omitempty"`
	// The presence of an error string indicates a fatal failure with a request.
	// Responses should encode specific errors within the payload, if possible.
	Error *string `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	// The payload itself. Needs to be (un)packed with `anypb`.
	// The Any payload can take literally any message and there is no Protobuf-enforced
	// typing between the MessageType and the payload. Therefore you should make sure
	// to name the Request and Result pairs absolutely clearly. Avoid using a generic
	// response message for different requests, even if their fields are identical.
	Payload       *anypb.Any `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_proto_v1_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetSequence() uint64 {
	if x != nil && x.Sequence != nil {
		return *x.Sequence
	}
	return 0
}

func (x *Envelope) GetType() Envelope_MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Envelope_UNKNOWN
}

func (x *Envelope) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Envelope) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

// The task message contains parameters to instantiate a task of a certain format
// and return the output upon successful execution. The Request and Response herein
// are the smallest unit of work that should be sent on the wire.
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_v1_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1}
}

// File is a file reference with optional mime-type. The ref could be a plain
// filename, a prefixed hash digest or a URL to fetch from. When stored, a hash
// digest should be computed to have a stable identifier.
type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ref           *string                `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`     // filename, encoded digest or URL
	Media         *string                `protobuf:"bytes,2,opt,name=media" json:"media,omitempty"` // media type in MIME notation
	Blob          []byte                 `protobuf:"bytes,3,opt,name=blob" json:"blob,omitempty"`   // the actual file contents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_proto_v1_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{2}
}

func (x *File) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

func (x *File) GetMedia() string {
	if x != nil && x.Media != nil {
		return *x.Media
	}
	return ""
}

func (x *File) GetBlob() []byte {
	if x != nil {
		return x.Blob
	}
	return nil
}

type Filesystem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem) Reset() {
	*x = Filesystem{}
	mi := &file_proto_v1_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem) ProtoMessage() {}

func (x *Filesystem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem.ProtoReflect.Descriptor instead.
func (*Filesystem) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3}
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_v1_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{4}
}

// Information about this task for identification and tracing.
type Task_Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`               // unique identifier for this task
	Requester     *string                `protobuf:"bytes,2,opt,name=requester" json:"requester,omitempty"` // who is requesting this task
	Provider      *string                `protobuf:"bytes,3,opt,name=provider" json:"provider,omitempty"`   // which provider executed this task
	Reference     *string                `protobuf:"bytes,4,opt,name=reference" json:"reference,omitempty"` // identifier given by client
	Trace         *Task_Trace            `protobuf:"bytes,5,opt,name=trace" json:"trace,omitempty"`         // existence signals that events should be traced
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Metadata) Reset() {
	*x = Task_Metadata{}
	mi := &file_proto_v1_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Metadata) ProtoMessage() {}

func (x *Task_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Metadata.ProtoReflect.Descriptor instead.
func (*Task_Metadata) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Task_Metadata) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Task_Metadata) GetRequester() string {
	if x != nil && x.Requester != nil {
		return *x.Requester
	}
	return ""
}

func (x *Task_Metadata) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *Task_Metadata) GetReference() string {
	if x != nil && x.Reference != nil {
		return *x.Reference
	}
	return ""
}

func (x *Task_Metadata) GetTrace() *Task_Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

// Quality of Service (QoS) parameters for a given task.
type Task_QoS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Priority      *bool                  `protobuf:"varint,1,opt,name=priority" json:"priority,omitempty"`
	Deadline      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deadline" json:"deadline,omitempty"`
	Immediate     *bool                  `protobuf:"varint,3,opt,name=immediate" json:"immediate,omitempty"` // schedule immediately or fail task execution if no worker is available
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_QoS) Reset() {
	*x = Task_QoS{}
	mi := &file_proto_v1_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_QoS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_QoS) ProtoMessage() {}

func (x *Task_QoS) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_QoS.ProtoReflect.Descriptor instead.
func (*Task_QoS) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Task_QoS) GetPriority() bool {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return false
}

func (x *Task_QoS) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *Task_QoS) GetImmediate() bool {
	if x != nil && x.Immediate != nil {
		return *x.Immediate
	}
	return false
}

type Task_Trace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Created       *int64                 `protobuf:"varint,1,opt,name=created" json:"created,omitempty"`   // unixnano
	Duration      *uint64                `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"` // total duration equivalent to client-observed delay
	Events        []*Task_TraceEvent     `protobuf:"bytes,3,rep,name=events" json:"events,omitempty"`      // log of events
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Trace) Reset() {
	*x = Task_Trace{}
	mi := &file_proto_v1_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Trace) ProtoMessage() {}

func (x *Task_Trace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Trace.ProtoReflect.Descriptor instead.
func (*Task_Trace) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Task_Trace) GetCreated() int64 {
	if x != nil && x.Created != nil {
		return *x.Created
	}
	return 0
}

func (x *Task_Trace) GetDuration() uint64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *Task_Trace) GetEvents() []*Task_TraceEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// Trace certain events throughout a task lifetime
type Task_TraceEvent struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Unixnano      *int64                     `protobuf:"varint,1,opt,name=unixnano" json:"unixnano,omitempty"`                                      // timestamp in nanoseconds (start instant of event)
	Event         *Task_TraceEvent_EventType `protobuf:"varint,2,opt,name=event,enum=wasimoff.v1.Task_TraceEvent_EventType" json:"event,omitempty"` // event identifier
	Details       *string                    `protobuf:"bytes,3,opt,name=details" json:"details,omitempty"`                                         // optional freetext details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_TraceEvent) Reset() {
	*x = Task_TraceEvent{}
	mi := &file_proto_v1_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_TraceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_TraceEvent) ProtoMessage() {}

func (x *Task_TraceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_TraceEvent.ProtoReflect.Descriptor instead.
func (*Task_TraceEvent) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Task_TraceEvent) GetUnixnano() int64 {
	if x != nil && x.Unixnano != nil {
		return *x.Unixnano
	}
	return 0
}

func (x *Task_TraceEvent) GetEvent() Task_TraceEvent_EventType {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return Task_TraceEvent_UNKNOWN
}

func (x *Task_TraceEvent) GetDetails() string {
	if x != nil && x.Details != nil {
		return *x.Details
	}
	return ""
}

// Request to terminate a running task on Provider.
type Task_Cancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`         // unique identifier of the task
	Reason        *string                `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"` // freeform reason for logging
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Cancel) Reset() {
	*x = Task_Cancel{}
	mi := &file_proto_v1_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Cancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Cancel) ProtoMessage() {}

func (x *Task_Cancel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Cancel.ProtoReflect.Descriptor instead.
func (*Task_Cancel) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 4}
}

func (x *Task_Cancel) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Task_Cancel) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

//	WebAssembly System Interface (WASI), preview1
//
// ===============================================
type Task_Wasip1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1) Reset() {
	*x = Task_Wasip1{}
	mi := &file_proto_v1_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1) ProtoMessage() {}

func (x *Task_Wasip1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1.ProtoReflect.Descriptor instead.
func (*Task_Wasip1) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 5}
}

//	Pyodide Python scripts
//
// ========================
type Task_Pyodide struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide) Reset() {
	*x = Task_Pyodide{}
	mi := &file_proto_v1_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide) ProtoMessage() {}

func (x *Task_Pyodide) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide.ProtoReflect.Descriptor instead.
func (*Task_Pyodide) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 6}
}

// Parameters to instantiate a WebAssembly WASI preview 1 task.
type Task_Wasip1_Params struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Binary        *File                  `protobuf:"bytes,1,opt,name=binary" json:"binary,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	Envs          []string               `protobuf:"bytes,3,rep,name=envs" json:"envs,omitempty"`
	Stdin         []byte                 `protobuf:"bytes,4,opt,name=stdin" json:"stdin,omitempty"`
	Rootfs        *File                  `protobuf:"bytes,5,opt,name=rootfs" json:"rootfs,omitempty"`
	Artifacts     []string               `protobuf:"bytes,6,rep,name=artifacts" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_Params) Reset() {
	*x = Task_Wasip1_Params{}
	mi := &file_proto_v1_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_Params) ProtoMessage() {}

func (x *Task_Wasip1_Params) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_Params.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_Params) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 5, 0}
}

func (x *Task_Wasip1_Params) GetBinary() *File {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *Task_Wasip1_Params) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Task_Wasip1_Params) GetEnvs() []string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *Task_Wasip1_Params) GetStdin() []byte {
	if x != nil {
		return x.Stdin
	}
	return nil
}

func (x *Task_Wasip1_Params) GetRootfs() *File {
	if x != nil {
		return x.Rootfs
	}
	return nil
}

func (x *Task_Wasip1_Params) GetArtifacts() []string {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// The result of an execution from a Wasip1.Params message. It should only be
// returned if the WebAssembly module was instantiated successfully at all.
type Task_Wasip1_Output struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *int32                 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Stdout        []byte                 `protobuf:"bytes,2,opt,name=stdout" json:"stdout,omitempty"`
	Stderr        []byte                 `protobuf:"bytes,3,opt,name=stderr" json:"stderr,omitempty"`
	Artifacts     *File                  `protobuf:"bytes,4,opt,name=artifacts" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_Output) Reset() {
	*x = Task_Wasip1_Output{}
	mi := &file_proto_v1_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_Output) ProtoMessage() {}

func (x *Task_Wasip1_Output) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_Output.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_Output) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 5, 1}
}

func (x *Task_Wasip1_Output) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Task_Wasip1_Output) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *Task_Wasip1_Output) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

func (x *Task_Wasip1_Output) GetArtifacts() *File {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// Offload a Wasip1 task.
type Task_Wasip1_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Qos           *Task_QoS              `protobuf:"bytes,2,opt,name=qos" json:"qos,omitempty"`
	Params        *Task_Wasip1_Params    `protobuf:"bytes,3,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_Request) Reset() {
	*x = Task_Wasip1_Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_Request) ProtoMessage() {}

func (x *Task_Wasip1_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_Request.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 5, 2}
}

func (x *Task_Wasip1_Request) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Wasip1_Request) GetQos() *Task_QoS {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *Task_Wasip1_Request) GetParams() *Task_Wasip1_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// Offload a job (group of Wasip1 tasks).
// Tasks will inherit unset values from the parent.
type Task_Wasip1_JobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Qos           *Task_QoS              `protobuf:"bytes,2,opt,name=qos" json:"qos,omitempty"`
	Parent        *Task_Wasip1_Params    `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	Tasks         []*Task_Wasip1_Params  `protobuf:"bytes,4,rep,name=tasks" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_JobRequest) Reset() {
	*x = Task_Wasip1_JobRequest{}
	mi := &file_proto_v1_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_JobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_JobRequest) ProtoMessage() {}

func (x *Task_Wasip1_JobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_JobRequest.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_JobRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 5, 3}
}

func (x *Task_Wasip1_JobRequest) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Wasip1_JobRequest) GetQos() *Task_QoS {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *Task_Wasip1_JobRequest) GetParent() *Task_Wasip1_Params {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Task_Wasip1_JobRequest) GetTasks() []*Task_Wasip1_Params {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Response for a single Wasip1 task, which can be an Error or OK.
type Task_Wasip1_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Info  *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*Task_Wasip1_Response_Error
	//	*Task_Wasip1_Response_Ok
	Result        isTask_Wasip1_Response_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_Response) Reset() {
	*x = Task_Wasip1_Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_Response) ProtoMessage() {}

func (x *Task_Wasip1_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_Response.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 5, 4}
}

func (x *Task_Wasip1_Response) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Wasip1_Response) GetResult() isTask_Wasip1_Response_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Task_Wasip1_Response) GetError() string {
	if x != nil {
		if x, ok := x.Result.(*Task_Wasip1_Response_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *Task_Wasip1_Response) GetOk() *Task_Wasip1_Output {
	if x != nil {
		if x, ok := x.Result.(*Task_Wasip1_Response_Ok); ok {
			return x.Ok
		}
	}
	return nil
}

type isTask_Wasip1_Response_Result interface {
	isTask_Wasip1_Response_Result()
}

type Task_Wasip1_Response_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,oneof"`
}

type Task_Wasip1_Response_Ok struct {
	Ok *Task_Wasip1_Output `protobuf:"bytes,3,opt,name=ok,oneof"`
}

func (*Task_Wasip1_Response_Error) isTask_Wasip1_Response_Result() {}

func (*Task_Wasip1_Response_Ok) isTask_Wasip1_Response_Result() {}

// Group result of a Wasip1 Job.
type Task_Wasip1_JobResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Info          *Task_Metadata          `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Error         *string                 `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Tasks         []*Task_Wasip1_Response `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Wasip1_JobResponse) Reset() {
	*x = Task_Wasip1_JobResponse{}
	mi := &file_proto_v1_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Wasip1_JobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Wasip1_JobResponse) ProtoMessage() {}

func (x *Task_Wasip1_JobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Wasip1_JobResponse.ProtoReflect.Descriptor instead.
func (*Task_Wasip1_JobResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 5, 5}
}

func (x *Task_Wasip1_JobResponse) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Wasip1_JobResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Task_Wasip1_JobResponse) GetTasks() []*Task_Wasip1_Response {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Parameters to instantiate a Pyodide task.
type Task_Pyodide_Params struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Packages []string               `protobuf:"bytes,1,rep,name=packages" json:"packages,omitempty"` // preloaded packages
	// Types that are valid to be assigned to Run:
	//
	//	*Task_Pyodide_Params_Script
	//	*Task_Pyodide_Params_Pickle
	Run           isTask_Pyodide_Params_Run `protobuf_oneof:"run"`
	Envs          []string                  `protobuf:"bytes,4,rep,name=envs" json:"envs,omitempty"`           // environment as ENV=var strings
	Stdin         []byte                    `protobuf:"bytes,5,opt,name=stdin" json:"stdin,omitempty"`         // buffer for stdin, reading errors if none
	Rootfs        *File                     `protobuf:"bytes,6,opt,name=rootfs" json:"rootfs,omitempty"`       // zip file to unpack
	Artifacts     []string                  `protobuf:"bytes,7,rep,name=artifacts" json:"artifacts,omitempty"` // files to pack and send back afterwards
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_Params) Reset() {
	*x = Task_Pyodide_Params{}
	mi := &file_proto_v1_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_Params) ProtoMessage() {}

func (x *Task_Pyodide_Params) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_Params.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_Params) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 6, 0}
}

func (x *Task_Pyodide_Params) GetPackages() []string {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *Task_Pyodide_Params) GetRun() isTask_Pyodide_Params_Run {
	if x != nil {
		return x.Run
	}
	return nil
}

func (x *Task_Pyodide_Params) GetScript() string {
	if x != nil {
		if x, ok := x.Run.(*Task_Pyodide_Params_Script); ok {
			return x.Script
		}
	}
	return ""
}

func (x *Task_Pyodide_Params) GetPickle() []byte {
	if x != nil {
		if x, ok := x.Run.(*Task_Pyodide_Params_Pickle); ok {
			return x.Pickle
		}
	}
	return nil
}

func (x *Task_Pyodide_Params) GetEnvs() []string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *Task_Pyodide_Params) GetStdin() []byte {
	if x != nil {
		return x.Stdin
	}
	return nil
}

func (x *Task_Pyodide_Params) GetRootfs() *File {
	if x != nil {
		return x.Rootfs
	}
	return nil
}

func (x *Task_Pyodide_Params) GetArtifacts() []string {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

type isTask_Pyodide_Params_Run interface {
	isTask_Pyodide_Params_Run()
}

type Task_Pyodide_Params_Script struct {
	Script string `protobuf:"bytes,2,opt,name=script,oneof"` // plaintext script
}

type Task_Pyodide_Params_Pickle struct {
	Pickle []byte `protobuf:"bytes,3,opt,name=pickle,oneof"` // serialized [ func, [args], {kwargs} ]
}

func (*Task_Pyodide_Params_Script) isTask_Pyodide_Params_Run() {}

func (*Task_Pyodide_Params_Pickle) isTask_Pyodide_Params_Run() {}

// The result of an execution from a Pyodide.Params message. It should only be
// returned if the Pyodide interpreter was started successfully at all.
type Task_Pyodide_Output struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pickle        []byte                 `protobuf:"bytes,1,opt,name=pickle" json:"pickle,omitempty"`
	Stdout        []byte                 `protobuf:"bytes,2,opt,name=stdout" json:"stdout,omitempty"`
	Stderr        []byte                 `protobuf:"bytes,3,opt,name=stderr" json:"stderr,omitempty"`
	Version       *string                `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"`
	Artifacts     *File                  `protobuf:"bytes,5,opt,name=artifacts" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_Output) Reset() {
	*x = Task_Pyodide_Output{}
	mi := &file_proto_v1_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_Output) ProtoMessage() {}

func (x *Task_Pyodide_Output) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_Output.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_Output) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 6, 1}
}

func (x *Task_Pyodide_Output) GetPickle() []byte {
	if x != nil {
		return x.Pickle
	}
	return nil
}

func (x *Task_Pyodide_Output) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *Task_Pyodide_Output) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

func (x *Task_Pyodide_Output) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *Task_Pyodide_Output) GetArtifacts() *File {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// Offload a Pyodide task.
type Task_Pyodide_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Qos           *Task_QoS              `protobuf:"bytes,2,opt,name=qos" json:"qos,omitempty"`
	Params        *Task_Pyodide_Params   `protobuf:"bytes,3,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_Request) Reset() {
	*x = Task_Pyodide_Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_Request) ProtoMessage() {}

func (x *Task_Pyodide_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_Request.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 6, 2}
}

func (x *Task_Pyodide_Request) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Pyodide_Request) GetQos() *Task_QoS {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *Task_Pyodide_Request) GetParams() *Task_Pyodide_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// Offload a job (group of Pyodide tasks).
// Tasks will inherit unset values from the parent.
type Task_Pyodide_JobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Qos           *Task_QoS              `protobuf:"bytes,2,opt,name=qos" json:"qos,omitempty"`
	Parent        *Task_Pyodide_Params   `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
	Tasks         []*Task_Pyodide_Params `protobuf:"bytes,4,rep,name=tasks" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_JobRequest) Reset() {
	*x = Task_Pyodide_JobRequest{}
	mi := &file_proto_v1_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_JobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_JobRequest) ProtoMessage() {}

func (x *Task_Pyodide_JobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_JobRequest.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_JobRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 6, 3}
}

func (x *Task_Pyodide_JobRequest) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Pyodide_JobRequest) GetQos() *Task_QoS {
	if x != nil {
		return x.Qos
	}
	return nil
}

func (x *Task_Pyodide_JobRequest) GetParent() *Task_Pyodide_Params {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Task_Pyodide_JobRequest) GetTasks() []*Task_Pyodide_Params {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Response for a single Pyodide task, which can be an Error or OK.
type Task_Pyodide_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Info  *Task_Metadata         `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*Task_Pyodide_Response_Error
	//	*Task_Pyodide_Response_Ok
	Result        isTask_Pyodide_Response_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_Response) Reset() {
	*x = Task_Pyodide_Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_Response) ProtoMessage() {}

func (x *Task_Pyodide_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_Response.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 6, 4}
}

func (x *Task_Pyodide_Response) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Pyodide_Response) GetResult() isTask_Pyodide_Response_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Task_Pyodide_Response) GetError() string {
	if x != nil {
		if x, ok := x.Result.(*Task_Pyodide_Response_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *Task_Pyodide_Response) GetOk() *Task_Pyodide_Output {
	if x != nil {
		if x, ok := x.Result.(*Task_Pyodide_Response_Ok); ok {
			return x.Ok
		}
	}
	return nil
}

type isTask_Pyodide_Response_Result interface {
	isTask_Pyodide_Response_Result()
}

type Task_Pyodide_Response_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,oneof"`
}

type Task_Pyodide_Response_Ok struct {
	Ok *Task_Pyodide_Output `protobuf:"bytes,3,opt,name=ok,oneof"`
}

func (*Task_Pyodide_Response_Error) isTask_Pyodide_Response_Result() {}

func (*Task_Pyodide_Response_Ok) isTask_Pyodide_Response_Result() {}

// Group result of a Pyodide Job.
type Task_Pyodide_JobResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Info          *Task_Metadata           `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Error         *string                  `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Tasks         []*Task_Pyodide_Response `protobuf:"bytes,3,rep,name=tasks" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task_Pyodide_JobResponse) Reset() {
	*x = Task_Pyodide_JobResponse{}
	mi := &file_proto_v1_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task_Pyodide_JobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Pyodide_JobResponse) ProtoMessage() {}

func (x *Task_Pyodide_JobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Pyodide_JobResponse.ProtoReflect.Descriptor instead.
func (*Task_Pyodide_JobResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{1, 6, 5}
}

func (x *Task_Pyodide_JobResponse) GetInfo() *Task_Metadata {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Task_Pyodide_JobResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Task_Pyodide_JobResponse) GetTasks() []*Task_Pyodide_Response {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Listing asks for a listing of all available files on Provider
type Filesystem_Listing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Listing) Reset() {
	*x = Filesystem_Listing{}
	mi := &file_proto_v1_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Listing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Listing) ProtoMessage() {}

func (x *Filesystem_Listing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Listing.ProtoReflect.Descriptor instead.
func (*Filesystem_Listing) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 0}
}

// Probe checks if a certain file exists on Provider
type Filesystem_Probe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Probe) Reset() {
	*x = Filesystem_Probe{}
	mi := &file_proto_v1_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Probe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Probe) ProtoMessage() {}

func (x *Filesystem_Probe) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Probe.ProtoReflect.Descriptor instead.
func (*Filesystem_Probe) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 1}
}

// Upload pushes a file to the other peer.
type Filesystem_Upload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Upload) Reset() {
	*x = Filesystem_Upload{}
	mi := &file_proto_v1_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Upload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Upload) ProtoMessage() {}

func (x *Filesystem_Upload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Upload.ProtoReflect.Descriptor instead.
func (*Filesystem_Upload) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 2}
}

// Download can request a file download from the other peer.
type Filesystem_Download struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Download) Reset() {
	*x = Filesystem_Download{}
	mi := &file_proto_v1_messages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Download) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Download) ProtoMessage() {}

func (x *Filesystem_Download) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Download.ProtoReflect.Descriptor instead.
func (*Filesystem_Download) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 3}
}

type Filesystem_Listing_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Listing_Request) Reset() {
	*x = Filesystem_Listing_Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Listing_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Listing_Request) ProtoMessage() {}

func (x *Filesystem_Listing_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Listing_Request.ProtoReflect.Descriptor instead.
func (*Filesystem_Listing_Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 0, 0}
}

type Filesystem_Listing_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []string               `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Listing_Response) Reset() {
	*x = Filesystem_Listing_Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Listing_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Listing_Response) ProtoMessage() {}

func (x *Filesystem_Listing_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Listing_Response.ProtoReflect.Descriptor instead.
func (*Filesystem_Listing_Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 0, 1}
}

func (x *Filesystem_Listing_Response) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type Filesystem_Probe_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *string                `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Probe_Request) Reset() {
	*x = Filesystem_Probe_Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Probe_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Probe_Request) ProtoMessage() {}

func (x *Filesystem_Probe_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Probe_Request.ProtoReflect.Descriptor instead.
func (*Filesystem_Probe_Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 1, 0}
}

func (x *Filesystem_Probe_Request) GetFile() string {
	if x != nil && x.File != nil {
		return *x.File
	}
	return ""
}

type Filesystem_Probe_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            *bool                  `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Probe_Response) Reset() {
	*x = Filesystem_Probe_Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Probe_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Probe_Response) ProtoMessage() {}

func (x *Filesystem_Probe_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Probe_Response.ProtoReflect.Descriptor instead.
func (*Filesystem_Probe_Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 1, 1}
}

func (x *Filesystem_Probe_Response) GetOk() bool {
	if x != nil && x.Ok != nil {
		return *x.Ok
	}
	return false
}

type Filesystem_Upload_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Upload        *File                  `protobuf:"bytes,1,opt,name=upload" json:"upload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Upload_Request) Reset() {
	*x = Filesystem_Upload_Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Upload_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Upload_Request) ProtoMessage() {}

func (x *Filesystem_Upload_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Upload_Request.ProtoReflect.Descriptor instead.
func (*Filesystem_Upload_Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 2, 0}
}

func (x *Filesystem_Upload_Request) GetUpload() *File {
	if x != nil {
		return x.Upload
	}
	return nil
}

type Filesystem_Upload_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ref           *string                `protobuf:"bytes,1,opt,name=ref" json:"ref,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Upload_Response) Reset() {
	*x = Filesystem_Upload_Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Upload_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Upload_Response) ProtoMessage() {}

func (x *Filesystem_Upload_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Upload_Response.ProtoReflect.Descriptor instead.
func (*Filesystem_Upload_Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 2, 1}
}

func (x *Filesystem_Upload_Response) GetRef() string {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return ""
}

type Filesystem_Download_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *string                `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Download_Request) Reset() {
	*x = Filesystem_Download_Request{}
	mi := &file_proto_v1_messages_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Download_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Download_Request) ProtoMessage() {}

func (x *Filesystem_Download_Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Download_Request.ProtoReflect.Descriptor instead.
func (*Filesystem_Download_Request) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 3, 0}
}

func (x *Filesystem_Download_Request) GetFile() string {
	if x != nil && x.File != nil {
		return *x.File
	}
	return ""
}

type Filesystem_Download_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Download      *File                  `protobuf:"bytes,1,opt,name=download" json:"download,omitempty"`
	Err           *string                `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filesystem_Download_Response) Reset() {
	*x = Filesystem_Download_Response{}
	mi := &file_proto_v1_messages_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Download_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Download_Response) ProtoMessage() {}

func (x *Filesystem_Download_Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filesystem_Download_Response.ProtoReflect.Descriptor instead.
func (*Filesystem_Download_Response) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{3, 3, 1}
}

func (x *Filesystem_Download_Response) GetDownload() *File {
	if x != nil {
		return x.Download
	}
	return nil
}

func (x *Filesystem_Download_Response) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

// GenericMessage is just a generic piece of text for logging
type Event_GenericMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *string                `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_GenericMessage) Reset() {
	*x = Event_GenericMessage{}
	mi := &file_proto_v1_messages_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_GenericMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_GenericMessage) ProtoMessage() {}

func (x *Event_GenericMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_GenericMessage.ProtoReflect.Descriptor instead.
func (*Event_GenericMessage) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Event_GenericMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// ProviderResources is information about the available resources in Worker pool
type Event_ProviderResources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Concurrency   *uint32                `protobuf:"varint,1,opt,name=concurrency" json:"concurrency,omitempty"` // maximum possible concurrency (~ number of Workers)
	Tasks         *uint32                `protobuf:"varint,2,opt,name=tasks" json:"tasks,omitempty"`             // currently active tasks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_ProviderResources) Reset() {
	*x = Event_ProviderResources{}
	mi := &file_proto_v1_messages_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_ProviderResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ProviderResources) ProtoMessage() {}

func (x *Event_ProviderResources) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ProviderResources.ProtoReflect.Descriptor instead.
func (*Event_ProviderResources) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Event_ProviderResources) GetConcurrency() uint32 {
	if x != nil && x.Concurrency != nil {
		return *x.Concurrency
	}
	return 0
}

func (x *Event_ProviderResources) GetTasks() uint32 {
	if x != nil && x.Tasks != nil {
		return *x.Tasks
	}
	return 0
}

// ClusterInfo contains information about all connected Providers
type Event_ClusterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Providers     *uint32                `protobuf:"varint,1,opt,name=providers" json:"providers,omitempty"` // number of currently connected providers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_ClusterInfo) Reset() {
	*x = Event_ClusterInfo{}
	mi := &file_proto_v1_messages_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_ClusterInfo) ProtoMessage() {}

func (x *Event_ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_ClusterInfo.ProtoReflect.Descriptor instead.
func (*Event_ClusterInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Event_ClusterInfo) GetProviders() uint32 {
	if x != nil && x.Providers != nil {
		return *x.Providers
	}
	return 0
}

// Throughput contains information about overall cluster throughput
type Event_Throughput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Overall       *float32               `protobuf:"fixed32,1,opt,name=overall" json:"overall,omitempty"` // current overall tasks/s throughput
	Yours         *float32               `protobuf:"fixed32,2,opt,name=yours" json:"yours,omitempty"`     // your contribution (identified by name)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_Throughput) Reset() {
	*x = Event_Throughput{}
	mi := &file_proto_v1_messages_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_Throughput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Throughput) ProtoMessage() {}

func (x *Event_Throughput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Throughput.ProtoReflect.Descriptor instead.
func (*Event_Throughput) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{4, 3}
}

func (x *Event_Throughput) GetOverall() float32 {
	if x != nil && x.Overall != nil {
		return *x.Overall
	}
	return 0
}

func (x *Event_Throughput) GetYours() float32 {
	if x != nil && x.Yours != nil {
		return *x.Yours
	}
	return 0
}

// FileSystemUpdate notifies the Broker about changed files on the Provider.
type Event_FileSystemUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Added         []string               `protobuf:"bytes,1,rep,name=added" json:"added,omitempty"`
	Removed       []string               `protobuf:"bytes,2,rep,name=removed" json:"removed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event_FileSystemUpdate) Reset() {
	*x = Event_FileSystemUpdate{}
	mi := &file_proto_v1_messages_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event_FileSystemUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_FileSystemUpdate) ProtoMessage() {}

func (x *Event_FileSystemUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_messages_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_FileSystemUpdate.ProtoReflect.Descriptor instead.
func (*Event_FileSystemUpdate) Descriptor() ([]byte, []int) {
	return file_proto_v1_messages_proto_rawDescGZIP(), []int{4, 4}
}

func (x *Event_FileSystemUpdate) GetAdded() []string {
	if x != nil {
		return x.Added
	}
	return nil
}

func (x *Event_FileSystemUpdate) GetRemoved() []string {
	if x != nil {
		return x.Removed
	}
	return nil
}

var File_proto_v1_messages_proto protoreflect.FileDescriptor

var file_proto_v1_messages_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x77, 0x61, 0x73, 0x69, 0x6d,
	0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x77, 0x61, 0x73, 0x69,
	0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x40, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x22, 0xb9, 0x18, 0x0a, 0x04, 0x54,
	0x61, 0x73, 0x6b, 0x1a, 0xa1, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x1a, 0x77, 0x0a, 0x03, 0x51, 0x6f, 0x53, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x1a, 0x73, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xee, 0x04, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x78, 0x6e, 0x61, 0x6e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x78, 0x6e, 0x61, 0x6e, 0x6f,
	0x12, 0x3c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xeb, 0x03, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x0a, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x0b, 0x12,
	0x1a, 0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x14, 0x12, 0x1f, 0x0a, 0x1b,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x15, 0x12, 0x13, 0x0a,
	0x0f, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x10, 0x16, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x10, 0x17, 0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x10, 0x18, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x19, 0x12, 0x20, 0x0a, 0x1c,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x1a, 0x12, 0x11,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x1e, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x10, 0x1f, 0x12, 0x15, 0x0a, 0x11, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x10, 0x20, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x74, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x10, 0x21, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x10, 0x22, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x10, 0x23, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x10, 0x24, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x10, 0x25, 0x1a, 0x30, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0xe0, 0x07, 0x0a, 0x06, 0x57, 0x61, 0x73,
	0x69, 0x70, 0x31, 0x1a, 0xba, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x29,
	0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x65, 0x6e, 0x76,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74,
	0x66, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x1a, 0x81, 0x01, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x1a, 0x9b, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x27, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x2e, 0x51, 0x6f, 0x53, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x73, 0x69,
	0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73,
	0x69, 0x70, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0xd5, 0x01, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x27, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x51, 0x6f, 0x53, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x73,
	0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61,
	0x73, 0x69, 0x70, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x31, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x61,
	0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57,
	0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x02,
	0x6f, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x8c, 0x01, 0x0a,
	0x0b, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x73,
	0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x98, 0x08, 0x0a, 0x07,
	0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x1a, 0xd2, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77,
	0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x74, 0x66, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x75, 0x6e, 0x1a, 0x9b, 0x01, 0x0a,
	0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77,
	0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x9c, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x51, 0x6f, 0x53, 0x52, 0x03, 0x71, 0x6f, 0x73, 0x12,
	0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0xd7, 0x01, 0x0a, 0x0a, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66,
	0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x03, 0x71, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x51, 0x6f, 0x53, 0x52, 0x03, 0x71, 0x6f,
	0x73, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x73,
	0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79,
	0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x1a, 0x90, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x6b, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x8d, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x61,
	0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50,
	0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x42, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x22, 0xde, 0x02, 0x0a, 0x0a, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x36, 0x0a, 0x07, 0x4c, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x1a, 0x42, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x1a, 0x1d, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x1a, 0x5c, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x34, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x61, 0x73,
	0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x1c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x72, 0x65, 0x66, 0x1a, 0x76, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x1d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x4b,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77,
	0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xaf, 0x02, 0x0a, 0x05,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x2a, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x4b, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x2b,
	0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3c, 0x0a, 0x0a, 0x54,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x79, 0x6f, 0x75, 0x72, 0x73, 0x1a, 0x42, 0x0a, 0x10, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x2a, 0x5c, 0x0a,
	0x0b, 0x53, 0x75, 0x62, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x77, 0x61, 0x73,
	0x69, 0x6d, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x76,
	0x31, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x76, 0x31, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x10, 0x02, 0x32, 0xec, 0x02, 0x0a, 0x05,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x52, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x57, 0x61, 0x73, 0x69,
	0x70, 0x31, 0x12, 0x20, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0c, 0x52, 0x75, 0x6e,
	0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x4a, 0x6f, 0x62, 0x12, 0x23, 0x2e, 0x77, 0x61, 0x73, 0x69,
	0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x57, 0x61, 0x73,
	0x69, 0x70, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x2e, 0x57, 0x61, 0x73, 0x69, 0x70, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x50, 0x79, 0x6f,
	0x64, 0x69, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69, 0x64, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x50, 0x79, 0x6f, 0x64, 0x69,
	0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x26, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f,
	0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1f, 0x5a, 0x1d, 0x77, 0x61,
	0x73, 0x69, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31,
	0x3b, 0x77, 0x61, 0x73, 0x69, 0x6d, 0x6f, 0x66, 0x66, 0x76, 0x31, 0x62, 0x08, 0x65, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var (
	file_proto_v1_messages_proto_rawDescOnce sync.Once
	file_proto_v1_messages_proto_rawDescData []byte
)

func file_proto_v1_messages_proto_rawDescGZIP() []byte {
	file_proto_v1_messages_proto_rawDescOnce.Do(func() {
		file_proto_v1_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_messages_proto_rawDesc), len(file_proto_v1_messages_proto_rawDesc)))
	})
	return file_proto_v1_messages_proto_rawDescData
}

var file_proto_v1_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_v1_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_proto_v1_messages_proto_goTypes = []any{
	(Subprotocol)(0),                     // 0: wasimoff.v1.Subprotocol
	(Envelope_MessageType)(0),            // 1: wasimoff.v1.Envelope.MessageType
	(Task_TraceEvent_EventType)(0),       // 2: wasimoff.v1.Task.TraceEvent.EventType
	(*Envelope)(nil),                     // 3: wasimoff.v1.Envelope
	(*Task)(nil),                         // 4: wasimoff.v1.Task
	(*File)(nil),                         // 5: wasimoff.v1.File
	(*Filesystem)(nil),                   // 6: wasimoff.v1.Filesystem
	(*Event)(nil),                        // 7: wasimoff.v1.Event
	(*Task_Metadata)(nil),                // 8: wasimoff.v1.Task.Metadata
	(*Task_QoS)(nil),                     // 9: wasimoff.v1.Task.QoS
	(*Task_Trace)(nil),                   // 10: wasimoff.v1.Task.Trace
	(*Task_TraceEvent)(nil),              // 11: wasimoff.v1.Task.TraceEvent
	(*Task_Cancel)(nil),                  // 12: wasimoff.v1.Task.Cancel
	(*Task_Wasip1)(nil),                  // 13: wasimoff.v1.Task.Wasip1
	(*Task_Pyodide)(nil),                 // 14: wasimoff.v1.Task.Pyodide
	(*Task_Wasip1_Params)(nil),           // 15: wasimoff.v1.Task.Wasip1.Params
	(*Task_Wasip1_Output)(nil),           // 16: wasimoff.v1.Task.Wasip1.Output
	(*Task_Wasip1_Request)(nil),          // 17: wasimoff.v1.Task.Wasip1.Request
	(*Task_Wasip1_JobRequest)(nil),       // 18: wasimoff.v1.Task.Wasip1.JobRequest
	(*Task_Wasip1_Response)(nil),         // 19: wasimoff.v1.Task.Wasip1.Response
	(*Task_Wasip1_JobResponse)(nil),      // 20: wasimoff.v1.Task.Wasip1.JobResponse
	(*Task_Pyodide_Params)(nil),          // 21: wasimoff.v1.Task.Pyodide.Params
	(*Task_Pyodide_Output)(nil),          // 22: wasimoff.v1.Task.Pyodide.Output
	(*Task_Pyodide_Request)(nil),         // 23: wasimoff.v1.Task.Pyodide.Request
	(*Task_Pyodide_JobRequest)(nil),      // 24: wasimoff.v1.Task.Pyodide.JobRequest
	(*Task_Pyodide_Response)(nil),        // 25: wasimoff.v1.Task.Pyodide.Response
	(*Task_Pyodide_JobResponse)(nil),     // 26: wasimoff.v1.Task.Pyodide.JobResponse
	(*Filesystem_Listing)(nil),           // 27: wasimoff.v1.Filesystem.Listing
	(*Filesystem_Probe)(nil),             // 28: wasimoff.v1.Filesystem.Probe
	(*Filesystem_Upload)(nil),            // 29: wasimoff.v1.Filesystem.Upload
	(*Filesystem_Download)(nil),          // 30: wasimoff.v1.Filesystem.Download
	(*Filesystem_Listing_Request)(nil),   // 31: wasimoff.v1.Filesystem.Listing.Request
	(*Filesystem_Listing_Response)(nil),  // 32: wasimoff.v1.Filesystem.Listing.Response
	(*Filesystem_Probe_Request)(nil),     // 33: wasimoff.v1.Filesystem.Probe.Request
	(*Filesystem_Probe_Response)(nil),    // 34: wasimoff.v1.Filesystem.Probe.Response
	(*Filesystem_Upload_Request)(nil),    // 35: wasimoff.v1.Filesystem.Upload.Request
	(*Filesystem_Upload_Response)(nil),   // 36: wasimoff.v1.Filesystem.Upload.Response
	(*Filesystem_Download_Request)(nil),  // 37: wasimoff.v1.Filesystem.Download.Request
	(*Filesystem_Download_Response)(nil), // 38: wasimoff.v1.Filesystem.Download.Response
	(*Event_GenericMessage)(nil),         // 39: wasimoff.v1.Event.GenericMessage
	(*Event_ProviderResources)(nil),      // 40: wasimoff.v1.Event.ProviderResources
	(*Event_ClusterInfo)(nil),            // 41: wasimoff.v1.Event.ClusterInfo
	(*Event_Throughput)(nil),             // 42: wasimoff.v1.Event.Throughput
	(*Event_FileSystemUpdate)(nil),       // 43: wasimoff.v1.Event.FileSystemUpdate
	(*anypb.Any)(nil),                    // 44: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),        // 45: google.protobuf.Timestamp
}
var file_proto_v1_messages_proto_depIdxs = []int32{
	1,  // 0: wasimoff.v1.Envelope.type:type_name -> wasimoff.v1.Envelope.MessageType
	44, // 1: wasimoff.v1.Envelope.payload:type_name -> google.protobuf.Any
	10, // 2: wasimoff.v1.Task.Metadata.trace:type_name -> wasimoff.v1.Task.Trace
	45, // 3: wasimoff.v1.Task.QoS.deadline:type_name -> google.protobuf.Timestamp
	11, // 4: wasimoff.v1.Task.Trace.events:type_name -> wasimoff.v1.Task.TraceEvent
	2,  // 5: wasimoff.v1.Task.TraceEvent.event:type_name -> wasimoff.v1.Task.TraceEvent.EventType
	5,  // 6: wasimoff.v1.Task.Wasip1.Params.binary:type_name -> wasimoff.v1.File
	5,  // 7: wasimoff.v1.Task.Wasip1.Params.rootfs:type_name -> wasimoff.v1.File
	5,  // 8: wasimoff.v1.Task.Wasip1.Output.artifacts:type_name -> wasimoff.v1.File
	8,  // 9: wasimoff.v1.Task.Wasip1.Request.info:type_name -> wasimoff.v1.Task.Metadata
	9,  // 10: wasimoff.v1.Task.Wasip1.Request.qos:type_name -> wasimoff.v1.Task.QoS
	15, // 11: wasimoff.v1.Task.Wasip1.Request.params:type_name -> wasimoff.v1.Task.Wasip1.Params
	8,  // 12: wasimoff.v1.Task.Wasip1.JobRequest.info:type_name -> wasimoff.v1.Task.Metadata
	9,  // 13: wasimoff.v1.Task.Wasip1.JobRequest.qos:type_name -> wasimoff.v1.Task.QoS
	15, // 14: wasimoff.v1.Task.Wasip1.JobRequest.parent:type_name -> wasimoff.v1.Task.Wasip1.Params
	15, // 15: wasimoff.v1.Task.Wasip1.JobRequest.tasks:type_name -> wasimoff.v1.Task.Wasip1.Params
	8,  // 16: wasimoff.v1.Task.Wasip1.Response.info:type_name -> wasimoff.v1.Task.Metadata
	16, // 17: wasimoff.v1.Task.Wasip1.Response.ok:type_name -> wasimoff.v1.Task.Wasip1.Output
	8,  // 18: wasimoff.v1.Task.Wasip1.JobResponse.info:type_name -> wasimoff.v1.Task.Metadata
	19, // 19: wasimoff.v1.Task.Wasip1.JobResponse.tasks:type_name -> wasimoff.v1.Task.Wasip1.Response
	5,  // 20: wasimoff.v1.Task.Pyodide.Params.rootfs:type_name -> wasimoff.v1.File
	5,  // 21: wasimoff.v1.Task.Pyodide.Output.artifacts:type_name -> wasimoff.v1.File
	8,  // 22: wasimoff.v1.Task.Pyodide.Request.info:type_name -> wasimoff.v1.Task.Metadata
	9,  // 23: wasimoff.v1.Task.Pyodide.Request.qos:type_name -> wasimoff.v1.Task.QoS
	21, // 24: wasimoff.v1.Task.Pyodide.Request.params:type_name -> wasimoff.v1.Task.Pyodide.Params
	8,  // 25: wasimoff.v1.Task.Pyodide.JobRequest.info:type_name -> wasimoff.v1.Task.Metadata
	9,  // 26: wasimoff.v1.Task.Pyodide.JobRequest.qos:type_name -> wasimoff.v1.Task.QoS
	21, // 27: wasimoff.v1.Task.Pyodide.JobRequest.parent:type_name -> wasimoff.v1.Task.Pyodide.Params
	21, // 28: wasimoff.v1.Task.Pyodide.JobRequest.tasks:type_name -> wasimoff.v1.Task.Pyodide.Params
	8,  // 29: wasimoff.v1.Task.Pyodide.Response.info:type_name -> wasimoff.v1.Task.Metadata
	22, // 30: wasimoff.v1.Task.Pyodide.Response.ok:type_name -> wasimoff.v1.Task.Pyodide.Output
	8,  // 31: wasimoff.v1.Task.Pyodide.JobResponse.info:type_name -> wasimoff.v1.Task.Metadata
	25, // 32: wasimoff.v1.Task.Pyodide.JobResponse.tasks:type_name -> wasimoff.v1.Task.Pyodide.Response
	5,  // 33: wasimoff.v1.Filesystem.Upload.Request.upload:type_name -> wasimoff.v1.File
	5,  // 34: wasimoff.v1.Filesystem.Download.Response.download:type_name -> wasimoff.v1.File
	17, // 35: wasimoff.v1.Tasks.RunWasip1:input_type -> wasimoff.v1.Task.Wasip1.Request
	18, // 36: wasimoff.v1.Tasks.RunWasip1Job:input_type -> wasimoff.v1.Task.Wasip1.JobRequest
	23, // 37: wasimoff.v1.Tasks.RunPyodide:input_type -> wasimoff.v1.Task.Pyodide.Request
	35, // 38: wasimoff.v1.Tasks.Upload:input_type -> wasimoff.v1.Filesystem.Upload.Request
	19, // 39: wasimoff.v1.Tasks.RunWasip1:output_type -> wasimoff.v1.Task.Wasip1.Response
	20, // 40: wasimoff.v1.Tasks.RunWasip1Job:output_type -> wasimoff.v1.Task.Wasip1.JobResponse
	25, // 41: wasimoff.v1.Tasks.RunPyodide:output_type -> wasimoff.v1.Task.Pyodide.Response
	36, // 42: wasimoff.v1.Tasks.Upload:output_type -> wasimoff.v1.Filesystem.Upload.Response
	39, // [39:43] is the sub-list for method output_type
	35, // [35:39] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_proto_v1_messages_proto_init() }
func file_proto_v1_messages_proto_init() {
	if File_proto_v1_messages_proto != nil {
		return
	}
	file_proto_v1_messages_proto_msgTypes[16].OneofWrappers = []any{
		(*Task_Wasip1_Response_Error)(nil),
		(*Task_Wasip1_Response_Ok)(nil),
	}
	file_proto_v1_messages_proto_msgTypes[18].OneofWrappers = []any{
		(*Task_Pyodide_Params_Script)(nil),
		(*Task_Pyodide_Params_Pickle)(nil),
	}
	file_proto_v1_messages_proto_msgTypes[22].OneofWrappers = []any{
		(*Task_Pyodide_Response_Error)(nil),
		(*Task_Pyodide_Response_Ok)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_messages_proto_rawDesc), len(file_proto_v1_messages_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_messages_proto_goTypes,
		DependencyIndexes: file_proto_v1_messages_proto_depIdxs,
		EnumInfos:         file_proto_v1_messages_proto_enumTypes,
		MessageInfos:      file_proto_v1_messages_proto_msgTypes,
	}.Build()
	File_proto_v1_messages_proto = out.File
	file_proto_v1_messages_proto_goTypes = nil
	file_proto_v1_messages_proto_depIdxs = nil
}
